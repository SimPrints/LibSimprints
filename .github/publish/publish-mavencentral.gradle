apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

group = publishedGroupId
version = libraryVersion

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId publishedGroupId
                artifactId artifact
                version libraryVersion
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar

                pom {
                    name = artifact
                    description = libraryDescription
                    url = siteUrl
                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }
                    scm {
                        connection = gitUrl
                        developerConnection = gitUrl
                        url = siteUrl
                    }
                }
            }
        }
    }
}

// Set up Sonatype repository
nexusPublishing {
    repositories {
        sonatype {
            //stagingProfileId = sonatypeStagingProfileId
            username = System.getenv('MAVEN_OSS_USERNAME')
            password = System.getenv('MAVEN_OSS_PASSWORD')
        }
    }
}

signing {
    useInMemoryPgpKeys(
            System.getenv('MAVEN_PGP_KEY_ID'),
            System.getenv('MAVEN_PGP_KEY'),
            System.getenv('MAVEN_PGP_KEY_PASSWORD'),
    )
    sign publishing.publications
}